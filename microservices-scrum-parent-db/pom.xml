<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.estafet.microservices.scrum</groupId>
		<artifactId>microservices-scrum-parent</artifactId>
		<version>1.0.8-SNAPSHOT</version>
	</parent>
	<artifactId>microservices-scrum-parent-db</artifactId>
	<packaging>pom</packaging>

	<profiles>
		<profile>
			<id>db</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>3.6.1</version>
						<configuration>
							<driver>org.postgresql.Driver</driver>
							<url>jdbc:postgresql://localhost:5432/${microservice}</url>
							<username>postgres</username>
							<password>welcome1</password>
							<outputChangeLogFile>${basedir}/src/main/resources/db-changelogs/db-changelog.xml</outputChangeLogFile>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>generateChangeLog</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>3.4.1</version>
						<configuration>
							<driver>org.postgresql.Driver</driver>
							<url>jdbc:postgresql://localhost:5432/${microservice}</url>
							<username>postgres</username>
							<password>welcome1</password>
							<changeLogFile>${basedir}/src/main/resources/db-changelogs/db-changelog-master.xml</changeLogFile>
							<diffChangeLogFile>${basedir}/src/main/resources/db-changelogs/liquibase-diff-changeLog.xml</diffChangeLogFile>
							<referenceUrl>hibernate:spring:${entity.package}?dialect=org.hibernate.dialect.PostgreSQLDialect</referenceUrl>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>org.liquibase.ext</groupId>
								<artifactId>liquibase-hibernate4</artifactId>
								<version>3.5</version>
							</dependency>
							<dependency>
								<groupId>org.springframework</groupId>
								<artifactId>spring-beans</artifactId>
								<version>5.2.20.RELEASE</version>
							</dependency>
							<dependency>
								<groupId>org.springframework.data</groupId>
								<artifactId>spring-data-jpa</artifactId>
								<version>1.7.3.RELEASE</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<goals>
									<goal>diff</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prepare-db</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
						<dependencies>
							<dependency>
								<groupId>org.postgresql</groupId>
								<artifactId>postgresql</artifactId>
								<version>9.4.1212.jre7</version>
							</dependency>
						</dependencies>
						<configuration>
							<driver>org.postgresql.Driver</driver>
							<url>jdbc:postgresql://postgresql.${project}.svc:5432/${project}-${microservice}</url>
							<username>postgres</username>
							<password>welcome1</password>
						</configuration>
						<executions>
							<execution>
								<id>create-db</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<!-- need another database to create the targeted one -->
									<url>jdbc:postgresql://postgresql.${project}.svc:5432/postgres</url>
									<autocommit>true</autocommit>
									<sqlCommand>CREATE DATABASE "${project}-${microservice}"</sqlCommand>
									<!-- ignore error when database is not available -->
									<onError>continue</onError>
								</configuration>
							</execution>
							<execution>
								<id>drop-liquibase-changelog</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<autocommit>true</autocommit>
									<sqlCommand>DROP TABLE IF EXISTS DATABASECHANGELOG</sqlCommand>
								</configuration>
							</execution>
							<execution>
								<id>drop-schema</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<autocommit>true</autocommit>
									<srcFiles>
										<srcFile>ddl/drop-${microservice}-db.ddl</srcFile>
									</srcFiles>
									<onError>continue</onError>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>		
		<profile>
			<id>create-prod-db</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
						<dependencies>
							<dependency>
								<groupId>org.postgresql</groupId>
								<artifactId>postgresql</artifactId>
								<version>9.4.1212.jre7</version>
							</dependency>
						</dependencies>
						<configuration>
							<driver>org.postgresql.Driver</driver>
							<url>jdbc:postgresql://postgresql.${project}.svc:5432/${project}-${microservice}</url>
							<username>postgres</username>
							<password>welcome1</password>
						</configuration>
						<executions>
							<execution>
								<id>create-db</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<!-- need another database to create the targeted one -->
									<url>jdbc:postgresql://postgresql.${project}.svc:5432/postgres</url>
									<autocommit>true</autocommit>
									<sqlCommand>CREATE DATABASE "${project}-${microservice}"</sqlCommand>
									<!-- ignore error when database is not available -->
									<onError>continue</onError>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>				
	</profiles>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.estafet.microservices.db.GenerateDDL</mainClass>
					<arguments>
						<argument>${microservice}</argument>
					</arguments>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.estafet.microservices.scrum.lib.data.db.GenerateDDL</groupId>
						<artifactId>microservices-scrum-data-lib</artifactId>
						<version>1.0.4</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Dalston.SR4</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-activemq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-spring-cloud-starter</artifactId>
			<version>0.0.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>		
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.5.0</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>1.2.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>